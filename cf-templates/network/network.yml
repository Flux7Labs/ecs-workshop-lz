AWSTemplateFormatVersion: 2010-09-09
Description: AWS ECS Workshop - Network Stack
Metadata:
  VersionDate: 2017-07-24
  # Others

Parameters:
  StackPrefix:
    Type: String
    Description: Prefix used for naming the resources created. ${StackPrefix}-<resource>.
    MaxLength: 16
    AllowedPattern: '[a-z0-9\-]+'
  CIDR:
    Description: VPC CIDR
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR Block (10.0.0.0/16)
  PublicSubnetCIDR0:
    Description: PublicSubnet0 CIDR
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR Block (10.0.0.0/16)
  PublicSubnetCIDR1:
    Description: PublicSubnet0 CIDR
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR Block (10.0.0.0/16)
  PrivateSubnetCIDR0:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR Block (10.0.0.0/16)
  PrivateSubnetCIDR1:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR Block (10.0.0.0/16)
  
Resources:
  VPC: 
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        !Ref CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-VPC'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${StackPrefix}-InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:  
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet0:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
          - 1
          - Fn::GetAZs: ''
      CidrBlock:
        !Ref PublicSubnetCIDR0
      MapPublicIpOnLaunch: true
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-Public-Subnet-0'
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
          - 2
          - Fn::GetAZs: ''
      CidrBlock:
        !Ref PublicSubnetCIDR1
      MapPublicIpOnLaunch: true
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-Public-Subnet-1'
  PrivateSubnet0:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
          - 1
          - Fn::GetAZs: ''
      CidrBlock:
        !Ref PrivateSubnetCIDR0
      MapPublicIpOnLaunch: false
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-Private-Subnet-0'
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
          - 2
          - Fn::GetAZs: ''
      CidrBlock:
        !Ref PrivateSubnetCIDR1
      MapPublicIpOnLaunch: false
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-private-Subnet-1'
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-PublicRT'
  PrivateRT0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-PrivateRT-0'
  PrivateRT1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-PrivateRT-1'

  PublicSubnetAssociation0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        !Ref PublicSubnet0
      RouteTableId:
        !Ref PublicRT
  PublicSubnetAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        !Ref PublicSubnet1
      RouteTableId:
        !Ref PublicRT
  PrivateSubnetAssociation0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        !Ref PrivateSubnet0
      RouteTableId:
        !Ref PrivateRT0
  PrivateSubnetAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        !Ref PrivateSubnet1
      RouteTableId:
        !Ref PrivateRT1
  EIPNATGateway0:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIPNATGateway1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc 
  NATGateway0:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        !GetAtt EIPNATGateway0.AllocationId
      SubnetId:
        !Ref PublicSubnet0
  NATGateway1:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        !GetAtt EIPNATGateway1.AllocationId
      SubnetId:
        !Ref PublicSubnet1

  # Routes
  PublicRTInternetRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        !Ref InternetGateway
  PrivateRTInternetRoute0:
    DependsOn: NATGateway0
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        !Ref PrivateRT0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        !Ref NATGateway0
  PrivateRTInternetRoute1:
    DependsOn: NATGateway1
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        !Ref PrivateRT1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        !Ref NATGateway1
  
  #ACL
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-PublicNetworkAcl'
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        !Ref VPC
      Tags:
        - Key: Name
          Value:
            !Sub '${StackPrefix}-PrivateNetworkAcl'

  # ACL Association
  PublicNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        !Ref PublicSubnet0
      NetworkAclId:
        !Ref PrivateNetworkAcl
  PublicNetworkAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        !Ref PublicSubnet1
      NetworkAclId:
        !Ref PrivateNetworkAcl
  PrivateNetworkAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        !Ref PrivateSubnet0
      NetworkAclId:
        !Ref PrivateNetworkAcl
  PrivateNetworkAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        !Ref PrivateSubnet1
      NetworkAclId:
        !Ref PrivateNetworkAcl
  
  PublicNetworkAclEntryInAllowAll:
    Type: AWS::EC2::NetworkAclEntry 
    Properties:
      NetworkAclId:
        !Ref PublicNetworkAcl
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  PublicNetworkAclEntryOutAllowAll: 
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        !Ref PublicNetworkAcl
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
  PrivateNetworkAclEntryInAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        !Ref PrivateNetworkAcl
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  PrivateNetworkAclEntryOutAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        !Ref PrivateNetworkAcl
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

Outputs:
  PublicRT:
    Value:
      !Ref PublicRT
    Export:
      Name:
        !Sub ${StackPrefix}-PublicRT
  PrivateRT0:
    Value:
      !Ref PrivateRT0
    Export:
      Name:
        !Sub ${StackPrefix}-PrivateRT0
  PrivateRT1:
    Value:
      !Ref PrivateRT1
    Export:
      Name:
        !Sub ${StackPrefix}-PrivateRT1
  PublicSubnet0:
    Value:
      !Ref PublicSubnet0
    Export:
      Name:
        !Sub ${StackPrefix}-Public-Subnet-0
  PublicSubnet1:
    Value:
      !Ref PublicSubnet1
    Export:
      Name:
        !Sub ${StackPrefix}-Public-Subnet-1
  PrivateSubnet0:
    Value:
      !Ref PrivateSubnet0
    Export:
      Name:
        !Sub ${StackPrefix}-Private-Subnet-0
  PrivateSubnet1:
    Value:
      !Ref PrivateSubnet1
    Export:
      Name:
        !Sub ${StackPrefix}-Private-Subnet-1
  PrivateSubnetCIDR0:
    Value:
      !Ref PrivateSubnetCIDR0
    Export:
      Name:
        !Sub ${StackPrefix}-Private-Subnet-CIDR-0
  PrivateSubnetCIDR1:
    Value:
      !Ref PrivateSubnetCIDR1
    Export:
      Name:
        !Sub ${StackPrefix}-Private-Subnet-CIDR-1
  PublicSubnetCIDR0:
    Value:
      !Ref PublicSubnetCIDR0
    Export:
      Name:
        !Sub ${StackPrefix}-Public-Subnet-CIDR-0
  PublicSubnetCIDR1:
    Value:
      !Ref PublicSubnetCIDR1
    Export:
      Name:
        !Sub ${StackPrefix}-Public-Subnet-CIDR-1
  VpcId:
    Value:
      !Ref VPC
    Export:
      Name:
        !Sub ${StackPrefix}-VpcId
  VpcCidr:
    Value: 
      !Ref CIDR
    Export:
      Name:
        !Sub ${StackPrefix}-VpcCIDR
