Description: 'CodePipeline Stack for Cloudformation Stacks Continuous Delivery'
Metadata:
    Stack: 3
    VersionDate: 2017-07-26
    Input:
      Description: "AWS Codepipeline for Cloudformation Stack Continuous Delivery"
    "AWS::CloudFormation::Interface":
        ParameterGroups:
          - Label:
              default: "CodePipeline Configuration"
            Parameters:
              - TemplatesBucket
          - Label:
              default: "Repository Details"
            Parameters:
              - GitHubRepoOwner
              - RepositoryName
              - BranchName
          - Label:
              default: "ChangeSet details"
            Parameters:
              - ChangeSetName
              - Email

Parameters:
  TemplatesBucket:
    Description: S3 bucket to which nested CF templates are synced
    Type: String
  StackPrefix:
    Description: Stack Prefix
    Type: String
    MaxLength: 16
    AllowedPattern: '[a-z0-9\-]+'
  GitUser:
    Description: 'User/Owner for Git repo'
    Type: String
  GitRepo:
    Description: 'Git repository name'
    Type: 'String'
  GitBranch:
    Description: 'Bit Branch being deployed'
    Type: 'String'
  Email:
    Description: Email for manual approval of ChangeSet
    Type: String
  ChangeSetName:
    Description: Name for the Changeset
    Type: String

Resources:
  # S3 Bucket created by git2s3
  #
  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: ECS-Workshop-Alerts
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub ${StackPrefix}-network-CF
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub ${StackPrefix}-Pipeline-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'codebuild:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codecommit:BatchGetRepositories'
                - 'codecommit:Get*'
                - 'codecommit:GitPull'
                - 'codecommit:List*'
                - 'codecommit:Update*'
                - 'codecommit:Test*'
                - 'codecommit:UploadArchive'
                Effect: Allow
                Resource: '*'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        #EncryptionKey: !Ref KMSKeyId
        Location: !Ref TemplatesBucket
        Type: S3
      DisableInboundStageTransitions: []
      RestartExecutionOnUpdate: true
      Name: !Sub "${StackPrefix}-pipeline"
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: FetchFromGit
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Ref TemplatesBucket
                S3ObjectKey: !Sub ${GitUser}/${GitRepo}/branch/${GitBranch}/${GitUser}_${GitRepo}_branch_${GitBranch}.zip
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: S3Artifact
              RunOrder: '1'
        - Name: IAMStackDeploy
          Actions:
            - Name: IAMCreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S3Artifact
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-iam
                ChangeSetName: !Sub ${ChangeSetName}-iam
                TemplateConfiguration:  "S3Artifact::cf-templates/iam/config_params.json"
                TemplatePath: "S3Artifact::cf-templates/iam/iam.yml"
                ParameterOverrides:
                    !Sub |
                      {
                        "StackPrefix": "${StackPrefix}"
                      }
              RunOrder: '1'
            - Name: IAMExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${ChangeSetName}-iam
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-iam
              RunOrder: '3'
        - Name: NetworkStackDeploy
          Actions:
            - Name: NetworkCreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S3Artifact
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-lz
                ChangeSetName: !Sub ${ChangeSetName}-lz
                TemplateConfiguration:  "S3Artifact::cf-templates/network/config_params.json"
                TemplatePath: "S3Artifact::cf-templates/network/network.yml"
                ParameterOverrides:
                     !Sub |
                       {
                          "StackPrefix": "${StackPrefix}"
                       }
              RunOrder: '1'
            - Name: NetworkExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${ChangeSetName}-lz
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-lz
              RunOrder: '3'
        - Name: ECSDeployStack
          Actions:
            - Name: CreateChangeSetECSCluster
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S3Artifact
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-cluster
                ChangeSetName: !Sub ${ChangeSetName}-cluster
                TemplateConfiguration:  "S3Artifact::cf-templates/ecs-cluster/config_params.json"
                TemplatePath: "S3Artifact::cf-templates/ecs-cluster/ecs.yml"
                ParameterOverrides:
                    !Sub |
                      {
                        "StackPrefix": "${StackPrefix}"
                      }
              RunOrder: '1'
            - Name: ExecuteChangeSetEcsCluster
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${ChangeSetName}-cluster
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-cluster
              RunOrder: '3'
        - Name: CreateServiceChangeSetExecution
          Actions:
            - Name: ServiceCreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S3Artifact
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-service-manager
                ChangeSetName: !Sub ${StackPrefix}-service-changeset
                TemplateConfiguration:  "S3Artifact::cf-templates/service/config_params.json"
                TemplatePath: "S3Artifact::cf-templates/service/service-manager.yml"
                ParameterOverrides:
                  !Sub |
                    {
                      "GitUser": "${GitUser}",
                      "ArtifactBucketName": "${TemplatesBucket}",
                      "PipelineIamRoleArn": "${PipelineRole.Arn}",
                      "StackPrefix": "${StackPrefix}"
                    }
              RunOrder: '1'
            - Name: ServiceExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${StackPrefix}-service-changeset
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub ${StackPrefix}-service-manager
              RunOrder: '3'
